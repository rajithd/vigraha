<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jaxrs="http://cxf.apache.org/jaxrs"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder location="classpath:data-loader.properties"/>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!--Driver name to connect to the database-->
        <property name="driverClass">
            <value>${vigraha.jdbc.driver}</value>
        </property>
        <!--DB URL-->
        <property name="jdbcUrl">
            <value>${vigraha.url}</value>
        </property>
        <!--DB User used to connect to the schema-->
        <property name="user">
            <value>${vigraha.username}</value>
        </property>
        <!--Password required to access for the above user-->
        <property name="password">
            <value>${vigraha.password}</value>
        </property>
        <!-- configuration pool via c3p0-->
        <property name="acquireIncrement">
            <value>${vigraha.c3p0.acquireIncrement}</value>
        </property>
        <property name="idleConnectionTestPeriod">
            <value>${vigraha.c3p0.idleConnectionTestPeriod}</value>
            <!-- seconds -->
        </property>
        <property name="maxPoolSize">
            <value>${vigraha.c3p0.maxPoolSize}</value>
        </property>
        <property name="maxStatements">
            <value>${vigraha.c3p0.maxStatements}</value>
        </property>
        <property name="minPoolSize">
            <value>${vigraha.c3p0.minPoolSize}</value>
        </property>
        <property name="initialPoolSize">
            <value>${vigraha.c3p0.initialPoolSize}</value>
        </property>
        <property name="maxIdleTime">
            <value>${vigraha.c3p0.maxIdleTime}</value>
        </property>
        <property name="acquireRetryAttempts">
            <value>${vigraha.c3p0.acquireRetryAttempts}</value>
        </property>
        <property name="acquireRetryDelay">
            <value>${vigraha.c3p0.acquireRetryDelay}</value>
        </property>
        <property name="breakAfterAcquireFailure">
            <value>${vigraha.c3p0.breakAfterAcquireFailure}</value>
        </property>
    </bean>

    <bean id="jdbcTemplate"
          class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource">
            <ref bean="dataSource"/>
        </property>
    </bean>

    <!-- Spring Data Access Exception Translator Defintion -->
    <bean id="jdbcExceptionTranslator" class="org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator">
        <property name="dataSource">
            <ref bean="dataSource"/>
        </property>
    </bean>















    <bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="voiceCallUploadManagerServiceTrigger"/>
                <ref bean="smsUploadManagerServiceTrigger"/>
                <ref bean="gprsUploadManagerServiceTrigger"/>
                <ref bean="lbsUploadManagerServiceTrigger"/>
                <ref bean="ussdUploadManagerServiceTrigger"/>
                <ref bean="custUploadManagerServiceTrigger"/>
            </list>
        </property>
    </bean>

    <!-- Quartz -->
    <bean id="voiceCallUploadManagerServiceTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="voiceCallTransactionManager"/>
        <property name="cronExpression" value="${voice.call.upload.cron.expression}"/>
    </bean>

    <bean id="smsUploadManagerServiceTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="smsTransactionManager"/>
        <property name="cronExpression" value="${sms.upload.cron.expression}"/>
    </bean>

    <bean id="gprsUploadManagerServiceTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="gprsTransactionManager"/>
        <property name="cronExpression" value="${gprs.upload.cron.expression}"/>
    </bean>

    <bean id="lbsUploadManagerServiceTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="lbsTransactionManager"/>
        <property name="cronExpression" value="${lbs.upload.cron.expression}"/>
    </bean>

    <bean id="ussdUploadManagerServiceTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="ussdTransactionManager"/>
        <property name="cronExpression" value="${ussd.upload.cron.expression}"/>
    </bean>

    <bean id="custUploadManagerServiceTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="custTransactionManager"/>
        <property name="cronExpression" value="${cust.upload.cron.expression}"/>
    </bean>
    
    <bean id="summeryProcudureCallTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="cronExpression" value="${summery.upload.cron.expression}"/>
    </bean>

    <bean id="voiceCallTransactionManager"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="voiceCallUploadObjectTarget"/>
        </property>
        <property name="targetMethod">
            <value>upload</value>
        </property>
    </bean>

    <bean id="smsTransactionManager"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="smsUploadObjectTarget"/>
        </property>
        <property name="targetMethod">
            <value>upload</value>
        </property>
    </bean>

    <bean id="gprsTransactionManager"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="gprsUploadObjectTarget"/>
        </property>
        <property name="targetMethod">
            <value>upload</value>
        </property>
    </bean>

    <bean id="lbsTransactionManager"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="lbsUploadObjectTarget"/>
        </property>
        <property name="targetMethod">
            <value>upload</value>
        </property>
    </bean>

    <bean id="ussdTransactionManager"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="ussdUploadObjectTarget"/>
        </property>
        <property name="targetMethod">
            <value>upload</value>
        </property>
    </bean>

    <bean id="custTransactionManager"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="custUploadObjectTarget"/>
        </property>
        <property name="targetMethod">
            <value>upload</value>
        </property>
    </bean>

    <bean id="summeryTransactionManager"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="summeryUploadObjectTarget"/>
        </property>
        <property name="targetMethod">
            <value>upload</value>
        </property>
    </bean>

    <bean id="voiceCallUploadObjectTarget" class="vigraha.dataloader.service.impl.VoiceCallUploadManagerServiceImpl">
        <constructor-arg index="0" type="int" value="4"/>
        <property name="sourceDirectoryPath">
            <value>${voice.call.upload.source.directory}</value>
        </property>
        <property name="archiveDirectoryPath">
            <value>${voice.call.upload.archive.directory}</value>
        </property>
        <property name="columnSeparator">
            <value>${voice.call.upload.column.separator}</value>
        </property>
        <property name="fileNamePattern">
            <value>${voice.call.upload.file.pattern}</value>
        </property>
        <property name="poolSize">
            <value>${voice.call.upload.thread.pool.size}</value>
        </property>
        <property name="rawBreaker">
            <value>${voice.call.upload.row.breaker}</value>
        </property>
        <property name="transactionRepository" ref="voiceCallTransactionRepository" />

    </bean>

    <bean id="smsUploadObjectTarget" class="vigraha.dataloader.service.impl.SMSUploadManagerServiceImpl">
        <constructor-arg index="0" type="int" value="4"/>
        <property name="sourceDirectoryPath">
            <value>${sms.upload.source.directory}</value>
        </property>
        <property name="archiveDirectoryPath">
            <value>${sms.upload.archive.directory}</value>
        </property>
        <property name="columnSeparator">
            <value>${sms.upload.column.separator}</value>
        </property>
        <property name="fileNamePattern">
            <value>${sms.upload.file.pattern}</value>
        </property>
        <property name="poolSize">
            <value>${sms.upload.thread.pool.size}</value>
        </property>
        <property name="rawBreaker">
            <value>${sms.upload.row.breaker}</value>
        </property>
        <property name="transactionRepository" ref="smsTransactionRepository" />

    </bean>

    <bean id="gprsUploadObjectTarget" class="vigraha.dataloader.service.impl.GPRSUploadManagerServiceImpl">
        <constructor-arg index="0" type="int" value="4"/>
        <property name="sourceDirectoryPath">
            <value>${gprs.upload.source.directory}</value>
        </property>
        <property name="archiveDirectoryPath">
            <value>${gprs.upload.archive.directory}</value>
        </property>
        <property name="columnSeparator">
            <value>${gprs.upload.column.separator}</value>
        </property>
        <property name="fileNamePattern">
            <value>${gprs.upload.file.pattern}</value>
        </property>
        <property name="poolSize">
            <value>${gprs.upload.thread.pool.size}</value>
        </property>
        <property name="rawBreaker">
            <value>${gprs.upload.row.breaker}</value>
        </property>
        <property name="transactionRepository" ref="gprsTransactionRepository" />

    </bean>

    <bean id="lbsUploadObjectTarget" class="vigraha.dataloader.service.impl.LBSUploadManagerServiceImpl">
        <constructor-arg index="0" type="int" value="4"/>
        <property name="sourceDirectoryPath">
            <value>${lbs.upload.source.directory}</value>
        </property>
        <property name="archiveDirectoryPath">
            <value>${lbs.upload.archive.directory}</value>
        </property>
        <property name="columnSeparator">
            <value>${lbs.upload.column.separator}</value>
        </property>
        <property name="fileNamePattern">
            <value>${lbs.upload.file.pattern}</value>
        </property>
        <property name="poolSize">
            <value>${lbs.upload.thread.pool.size}</value>
        </property>
        <property name="rawBreaker">
            <value>${lbs.upload.row.breaker}</value>
        </property>
        <property name="transactionRepository" ref="lbsTransactionRepository" />

    </bean>

    <bean id="ussdUploadObjectTarget" class="vigraha.dataloader.service.impl.USSDUploadManagerServiceImpl">
        <constructor-arg index="0" type="int" value="4"/>
        <property name="sourceDirectoryPath">
            <value>${ussd.upload.source.directory}</value>
        </property>
        <property name="archiveDirectoryPath">
            <value>${ussd.upload.archive.directory}</value>
        </property>
        <property name="columnSeparator">
            <value>${ussd.upload.column.separator}</value>
        </property>
        <property name="fileNamePattern">
            <value>${ussd.upload.file.pattern}</value>
        </property>
        <property name="poolSize">
            <value>${ussd.upload.thread.pool.size}</value>
        </property>
        <property name="rawBreaker">
            <value>${ussd.upload.row.breaker}</value>
        </property>
        <property name="transactionRepository" ref="ussdTransactionRepository" />

    </bean>

    <bean id="custUploadObjectTarget" class="vigraha.dataloader.service.impl.CustomerUploadManagerServiceImpl">
        <property name="sourceDirectoryPath">
            <value>${cust.upload.source.directory}</value>
        </property>
        <property name="fileNamePattern">
            <value>${cust.upload.file.pattern}</value>
        </property>
        <property name="archiveDirectoryPath">
            <value>${cust.upload.archive.directory}</value>
        </property>
        <property name="columnSeparator">
            <value>${cust.upload.column.separator}</value>
        </property>
        <property name="jsonIndex">
            <value>${cust.upload.json.index}</value>
        </property>
        <property name="columnAppender">
            <value>${cust.upload.column.appender}</value>
        </property>
        <property name="rowBreaker">
            <value>${cust.upload.row.breaker}</value>
        </property>
        <property name="transactionRepository" ref="customerTransactionRepository" />
        <property name="jsonDecoderService" ref="jsonDecoderService"/>

    </bean>

    <bean id="summeryUploadObjectTarget" class="vigraha.dataloader.service.impl.CustomerUploadManagerServiceImpl">
        <property name="transactionRepository" ref="summeryTransactionRepository" />
        <property name="jsonDecoderService" ref="jsonDecoderService"/>

    </bean>

    <bean id="voiceCallTransactionRepository" class="vigraha.dataloader.repository.impl.VoiceCallTransactionRepositoryImpl">
        <property name="jdbcTemplate">
            <ref bean="jdbcTemplate"/>
        </property>
    </bean>

    <bean id="smsTransactionRepository" class="vigraha.dataloader.repository.impl.SMSTransactionRepositoryImpl">
        <property name="jdbcTemplate">
            <ref bean="jdbcTemplate"/>
        </property>
    </bean>

    <bean id="gprsTransactionRepository" class="vigraha.dataloader.repository.impl.GPRSTransactionRepositoryImpl">
        <property name="jdbcTemplate">
            <ref bean="jdbcTemplate"/>
        </property>
    </bean>

    <bean id="lbsTransactionRepository" class="vigraha.dataloader.repository.impl.LBSTransactionRepositoryImpl">
        <property name="jdbcTemplate">
            <ref bean="jdbcTemplate"/>
        </property>
    </bean>

    <bean id="ussdTransactionRepository" class="vigraha.dataloader.repository.impl.USSDTransactionRepositoryImpl">
        <property name="jdbcTemplate">
            <ref bean="jdbcTemplate"/>
        </property>
    </bean>

    <bean id="customerTransactionRepository" class="vigraha.dataloader.repository.impl.CustomerTranactionRepository">
        <property name="jdbcTemplate">
            <ref bean="jdbcTemplate"/>
        </property>
    </bean>

    <bean id="summeryTransactionRepository" class="vigraha.dataloader.repository.impl.SummeryProcedureCall">
        <property name="jdbcTemplate">
            <ref bean="jdbcTemplate"/>
        </property>
    </bean>

    <bean id="jsonDecoderService" class="vigraha.dataloader.service.impl.JsonDecoderServiceImpl"/>


</beans>